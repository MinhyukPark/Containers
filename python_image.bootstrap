Bootstrap: docker
From: ubuntu:20.04

%environment
    export DEBIAN_FRONTEND=noninteractive
    export TZ=America/Chicago
    export LC_ALL=C.UTF-8
    export LANG=C.UTF-8

%post
    # set the time
    ln -fs /usr/share/zoneinfo/America/Chicago /etc/localtime


    # update first always
    ## force ipv4 for apt-get
    echo 'Acquire::ForceIPv4 "true";' | tee /etc/apt/apt.conf.d/99force-ipv4
    ## longer timeout
    echo 'Acquire::http::Timeout "300";' | tee /etc/apt/apt.conf.d/99timeout
    ## More retries
    echo 'Acquire::Retries "10";' | tee /etc/apt/apt.conf.d/99retries
    ## Limit download and disable parallel
    echo 'Acquire::http::Dl-Limit "2000";' | tee /etc/apt/apt.conf.d/99dl-limit
    apt-get -y update
    # and then software-properties-common mostly because of add ppa
    apt-get install -y software-properties-common
    apt-get install -y dirmngr
    apt-get install -y time

    # build tools
    apt-get install -y build-essential
    apt-get install -y gcc-8
    apt-get install -y g++-8
    # swap gcc and g++
    # update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8
    apt-get install -y cmake
    apt-get install -y autoconf
    apt-get install -y automake
    apt-get install -y pkg-config
    apt-get install -y gdb
    apt-get install -y valgrind
    apt-get install -y tar
    apt-get install -y wget
    apt-get install -y git
    apt-get install -y default-jre
    apt-get install -y default-jdk
    apt-get install -y mpi-default-bin
    apt-get install -y mpi-default-dev
    apt-get install -y bison
    apt-get install -y flex
    apt-get install -y libtool
    apt-get install -y autotools-dev
    apt-get install -y libffi-dev
    apt-get install -y libssl1.1
    apt-get install -y libssl-dev
    apt-get install -y curl
    apt-get install -y libboost-python-dev
    apt-get install -y libpython3.9-dev
    apt-get clean

    apt-get install -y debconf-utils
    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

    # git config --global --unset http.sslBackend
    git config --global http.sslBackend "gnutls"

    # CRAN repo
    #apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
    #add-apt-repository -y 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/'
    #apt-get -y update
    # Add R
    wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc >/dev/null
    add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
    apt-get install -y --no-install-recommends r-base
    apt-get install -y --no-install-recommends r-base-dev
    echo "install.packages(\"sirt\", repos=\"https://cran.rstudio.com\")" | R --no-save
    echo "install.packages(\"data.table\", repos=\"https://cran.rstudio.com\")" | R --no-save
    echo "install.packages(\"feather\", repos=\"https://cran.rstudio.com\")" | R --no-save
    apt-get clean

    # graph-tool just in case
    echo 'deb [trusted=yes] https://downloads.skewed.de/apt focal main' | tee /etc/apt/sources.list.d/deb_graph_tools.list >/dev/null
    apt-key adv --keyserver keyserver.ubuntu.com --recv-key 612DEFB798507F25
    apt-get update
    apt-get install -y python3-graph-tool

    # python packages
    add-apt-repository ppa:deadsnakes/ppa
    apt-get -y update
    apt-get install -y python3.10
    apt-get install -y python3.10-venv
    apt-get install -y python3.10-dev
    curl -sS https://bootstrap.pypa.io/get-pip.py | python3.10

    # pip3 install virtualenv
    # pip3 install click
    # pip3 install sphinx-click


%test
    echo "Testing Packages"

    echo -n "Checking Python version: "
    python3.10 --version || echo "ERROR: Please check the installation for Python 3.10"

%labels
    Author MinhyukPark
