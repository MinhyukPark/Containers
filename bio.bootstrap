Bootstrap: docker
From: ubuntu:18.04

%environment
    TZ=America/Chicago
    DEBIAN_FRONTEND=noninteractive
    export TZ=DEBIAN_FRONTEND
    export LC_ALL=C.UTF-8
    export LANG=C.UTF-8

%post
    # set the time
    ln -fs /usr/share/zoneinfo/America/Chicago /etc/localtime

    # update first always
    ## force ipv4 for apt-get
    echo 'Acquire::ForceIPv4 "true";' | tee /etc/apt/apt.conf.d/99force-ipv4
    ## longer timeout
    echo 'Acquire::http::Timeout "300";' | tee /etc/apt/apt.conf.d/99timeout
    ## More retries
    echo 'Acquire::Retries "10";' | tee /etc/apt/apt.conf.d/99retries
    ## Limit download and disable parallel
    echo 'Acquire::http::Dl-Limit "2000";' | tee /etc/apt/apt.conf.d/99dl-limit
    apt-get -y update
    # and then software-properties-common mostly because of add ppa
    apt-get install -y software-properties-common
    apt-get install -y time


    # for cmake
    # why doesn't this work
    # apt-get install -y lsb-release
    # apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6AF7F09730B3F0A4
    # wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
    # echo 'deb [trusted=yes] https://apt.kitware.com/ubuntu/ bionic main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null
    # apt-get -y update

    # build tools
    apt-get install -y build-essential
    apt-get install -y gcc-8
    apt-get install -y g++-8
    # swap gcc and g++
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8
    apt-get install -y cmake
    apt-get install -y autoconf
    apt-get install -y automake
    apt-get install -y pkg-config
    apt-get install -y gdb
    apt-get install -y valgrind
    apt-get install -y tar
    apt-get install -y wget
    apt-get install -y git
    apt-get install -y default-jre
    apt-get install -y default-jdk
    apt-get install -y mpi-default-bin
    apt-get install -y mpi-default-dev
    apt-get install -y bison
    apt-get install -y flex
    apt-get install -y libtool
    apt-get install -y autotools-dev
    apt-get install -y libffi-dev
    apt-get install -y libssl1.0.0
    apt-get install -y libssl-dev
    apt-get install -y curl
    apt-get clean

    # CRAN repo
    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
    add-apt-repository -y 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/'
    apt-get -y update
    apt-get install -y r-base
    echo "install.packages(\"sirt\", repos=\"https://cran.rstudio.com\")" | R --no-save
    apt-get clean

    # for python3.9
    add-apt-repository ppa:deadsnakes/ppa
    apt-get update

    # python packages
    apt-get install -y python-pip
    apt-get install -y python-tk
    apt-get install -y libpython2.7

    apt-get install -y python3
    apt-get install -y python3-tk
    apt-get install -y python3-venv python3-pip
    apt-get install -y python3-sphinx
    apt-get clean

    apt-get install -y python3.7
    apt-get install -y python3.7-venv
    apt-get install -y python3.7-dev
    apt-get clean

    apt-get install -y python3.9
    apt-get install -y python3.9-venv
    apt-get install -y python3.9-dev

    pip install virtualenv
    pip3 install virtualenv

    pip install click
    pip3 install click

    pip3 install sphinx-click

    cd /opt/
    python3.9 -m venv env
    . env/bin/activate
    pip3 install click
    pip3 install dendropy
    pip3 install matplotlib
    pip3 install numpy
    pip3 install treeswift
    pip3 install Cython
    pip3 install scipy
    pip3 install scikit-learn
    pip3 install scikit-bio
    pip3 install biopython
    pip3 install pyhmmer-sepp
    pip3 install pytest
    pip3 install pathos
    pip3 install memray
    deactivate


    cd /opt/
    git clone "https://github.com/MinhyukPark/QuickScripts.git"
    cd /opt/QuickScripts
    python3.9 -m venv env
    . env/bin/activate
    pip3 install click
    pip3 install dendropy
    pip3 install matplotlib
    pip3 install numpy
    pip3 install treeswift
    pip3 install Cython
    pip3 install scipy
    pip3 install scikit-learn
    pip3 install scikit-bio
    pip3 install biopython
    pip3 install pyhmmer-sepp
    pip3 install pathos
    # pip3 install pyvolve # sequence evolution simulator
    pip3 install pytest
    deactivate

    # hmms
    mkdir /opt/hmmer
    cd /opt/hmmer
    wget "http://eddylab.org/software/hmmer/hmmer.tar.gz"
    tar xf hmmer.tar.gz
    cd hmmer-3.3.2
    ./configure
    make
    make install

    # simulators
    ## indelible
    mkdir /opt/indelible
    cd /opt/indelible
    wget "http://abacus.gene.ucl.ac.uk/software/indelible/EFBKqHdv0v7qir6CyeHgqaz/INDELibleV1.03.tar.gz"
    tar -xzf ./INDELibleV1.03.tar.gz
    cd INDELibleV1.03/src
    g++ -o indelible -O4 indelible.cpp
    ln -s /opt/indelible/INDELibleV1.03/src/indelible /usr/bin/indelible
    ## simphy
    mkdir /opt/simphy
    cd /opt/simphy
    wget "https://github.com/adamallo/SimPhy/releases/download/v1.0.2/SimPhy_1.0.2.tar.gz"
    tar -xzf ./SimPhy_1.0.2.tar.gz
    chmod +x ./SimPhy_1.0.2/bin/simphy_lnx64
    ln -s /opt/simphy/SimPhy_1.0.2/bin/simphy_lnx64 /usr/bin/simphy

    # Sequence Alignment
    ## WITCH
    cd /opt/
    git clone https://github.com/c5shen/WITCH.git
    cd WITCH
    # git checkout new_experimental_gcm
    python3.7 -m venv --system-site-packages env
    . env/bin/activate
    pip3 install Cython
    pip3 install -r requirements.txt
    python3.7 setup.py
    deactivate

    ## MAFFT
    mkdir /opt/mafft
    cd /opt/mafft
    wget "https://mafft.cbrc.jp/alignment/software/mafft-7.487-with-extensions-src.tgz"
    tar -xzf ./mafft-7.487-with-extensions-src.tgz
    cd ./mafft-7.487-with-extensions/core/
    make clean
    make
    make install
    cd /opt/mafft/mafft-7.487-with-extensions/extensions/
    make clean
    make
    make install


    ## HH-suite
    cd /opt/
    git clone https://github.com/soedinglab/hh-suite.git
    cd hh-suite
    mkdir build
    cd build
    cmake -DCMAKE_INSTALL_PREFIX="/opt/hh-suite" ..
    make

    ## trimal
    cd /opt/
    git clone "https://github.com/scapella/trimal.git"
    cd trimal
    cd source
    make
    ln -s /opt/trimal/source/trimal /usr/bin/trimal

    ## muscle
    mkdir /opt/muscle
    cd /opt/muscle
    wget "https://www.drive5.com/muscle/downloads3.8.31/muscle3.8.31_i86linux64.tar.gz"
    tar -xzf ./muscle3.8.31_i86linux64.tar.gz
    ln -s /opt/muscle/muscle3.8.31_i86linux64 /usr/bin/muscle

    ## PASTA
    mkdir /opt/pasta-code
    cd /opt/pasta-code
    git clone https://github.com/smirarab/pasta.git
    git clone https://github.com/smirarab/sate-tools-linux.git
    python3.9 -m venv env
    . env/bin/activate
    pip3 install click
    pip3 install dendropy
    cd pasta
    python setup.py develop
    deactivate
    export PATH=$PATH:/opt/pasta-code/pasta

    ## sepp
    cd /opt/
    git clone https://github.com/smirarab/sepp.git
    # git clone https://github.com/MinhyukPark/sepp.git
    cd sepp
    python3.9 -m venv env
    . env/bin/activate
    pip3 install click
    pip3 install dendropy
    pip3 install pyhmmer-sepp
    python setup.py config -c
    python setup.py install
    python setup.py upp -c
    deactivate




    ## t-coffee
    mkdir /opt/t_coffee
    cd /opt/t_coffee
    wget "https://s3.eu-central-1.amazonaws.com/tcoffee-packages/Stable/Latest/T-COFFEE_distribution_Version_13.45.0.4846264.tar.gz"
    tar -xzvf ./T-COFFEE_distribution_Version_13.45.0.4846264.tar.gz
    ln -s /opt/t_coffee/T-COFFEE_distribution_Version_13.45.0.4846264/bin/t_coffee /usr/bin/t_coffee

    # tree inference
    ## phyml
    cd /opt/
    git clone https://github.com/stephaneguindon/phyml.git
    cd /opt/phyml
    sh ./autogen.sh
    ./configure --enable-phyml
    make
    ln -s /opt/phyml/src/phyml /usr/bin/phyml
    ## fasttree
    mkdir /opt/fasttree
    cd /opt/fasttree
    wget "http://www.microbesonline.org/fasttree/FastTreeMP"
    chmod +x ./FastTreeMP
    wget "http://www.microbesonline.org/fasttree/FastTree.c"
    gcc -DUSE_DOUBLE -DOPENMP -fopenmp -O3 -finline-functions -funroll-loops -Wall -o FastTreeDoubleMP FastTree.c -lm
    ln -s /opt/fasttree/FastTreeDoubleMP /usr/bin/fasttree
    ln -s /opt/fasttree/FastTreeDoubleMP /usr/bin/FastTreeDoubleMP
    ## veryfasttree
    cd /opt/
    git clone "https://github.com/citiususc/veryfasttree.git"
    cd /opt/veryfasttree
    cmake .
    ln -s /opt/veryfasttree/VeryFastTree /usr/bin/VeryFastTree


    ## PAUP*
    mkdir /opt/paup
    cd /opt/paup
    wget "http://phylosolutions.com/paup-test/paup4a168_ubuntu64.gz"
    gunzip ./paup4a168_ubuntu64.gz
    chmod +x ./paup4a168_ubuntu64
    ln -s /opt/paup/paup4a168_ubuntu64 /usr/bin/paup

    ## ASTRID
    mkdir /opt/astrid
    cd /opt/astrid
    wget "https://github.com/pranjalv123/ASTRID-1/releases/download/v1.4/ASTRID-linux"
    chmod +x ./ASTRID-linux
    ln -s /opt/astrid/ASTRID-linux /usr/bin/astrid

    ## RAxML-ng
    mkdir /opt/raxmlng
    cd /opt/raxmlng
    wget "https://github.com/amkozlov/raxml-ng/releases/download/1.0.1/raxml-ng_v1.0.1_linux_x86_64.zip"
    unzip ./raxml-ng_v1.0.1_linux_x86_64.zip
    ln -s /opt/raxmlng/raxml-ng /usr/bin/raxmlng

    ## raxml7.2.4
    mkdir /opt/raxml_7_2_4
    cd /opt/raxml_7_2_4
    wget "https://cme.h-its.org/exelixis/resource/download/software/RAxML-7.2.4.tar.bz2"
    tar -xjf ./RAxML-7.2.4.tar.bz2
    cd RAxML-7.2.4
    make -f Makefile.SSE3.PTHREADS.gcc
    ln -s /opt/raxml_7_2_4/RAxML-7.2.4/raxmlHPC-PTHREADS-SSE3 /usr/bin/raxml-pthreads-sse3-7.2.4
    rm *.o
    make -f Makefile.SSE3.gcc
    ln -s /opt/raxml_7_2_4/RAxML-7.2.4/raxmlHPC-SSE3 /usr/bin/raxml-sse3-7.2.4

    ## raxml8.2.12
    mkdir /opt/raxml_8_2_12
    cd /opt/raxml_8_2_12
    wget "https://github.com/stamatak/standard-RAxML/archive/refs/tags/v8.2.12.tar.gz"
    tar -xzvf ./v8.2.12.tar.gz
    cd standard-RAxML-8.2.12
    make -f Makefile.SSE3.PTHREADS.gcc
    ln -s /opt/raxml_8_2_12/standard-RAxML-8.2.12/raxmlHPC-PTHREADS-SSE3 /usr/bin/raxml-pthreads-sse3-8.2.12
    rm *.o
    make -f Makefile.SSE3.gcc
    ln -s /opt/raxml_8_2_12/standard-RAxML-8.2.12/raxmlHPC-SSE3 /usr/bin/raxml-sse3-8.2.12

    ## iqtree
    mkdir /opt/iqtree
    cd /opt/iqtree
    wget "https://github.com/Cibiv/IQ-TREE/releases/download/v1.6.12/iqtree-1.6.12-Linux.tar.gz"
    tar -xzf ./iqtree-1.6.12-Linux.tar.gz
    ln -s /opt/iqtree/iqtree-1.6.12-Linux/bin/iqtree /usr/bin/iqtree
    mkdir /opt/iqtree2
    cd /opt/iqtree2
    wget "https://github.com/Cibiv/IQ-TREE/releases/download/v2.0.6/iqtree-2.0.6-Linux.tar.gz"
    tar -xzf ./iqtree-2.0.6-Linux.tar.gz
    ln -s /opt/iqtree2/iqtree-2.0.6-Linux/bin/iqtree2 /usr/bin/iqtree2
    apt-get clean

    ## clustalomega
    mkdir /opt/clustalomega
    cd /opt/clustalomega
    wget "http://www.clustal.org/omega/clustalo-1.2.4-Ubuntu-x86_64"
    chmod +x /opt/clustalomega/clustalo-1.2.4-Ubuntu-x86_64
    ln -s /opt/clustalomega/clustalo-1.2.4-Ubuntu-x86_64 /usr/bin/clustalo

    # Phylogenetic Placement
    ## EPA-ng
    cd /opt/
    git clone https://github.com/Pbdas/epa-ng.git
    cd /opt/epa-ng
    make
    chmod +x /opt/epa-ng/bin/epa-ng
    ln -s /opt/epa-ng/bin/epa-ng /usr/bin/epa-ng
    ## gappa
    # cd /opt/
    # git clone --recursive https://github.com/lczech/gappa.git
    # cd /opt/gappa
    # make
    # chmod +x /opt/gappa/bin/gappa
    # ln -s /opt/gappa/bin/gappa /usr/bin/gappa


    # Disjoint Tree Mergers
    ## TreeMerge
    cd /opt/
    git clone "https://github.com/ekmolloy/treemerge.git"
    cd /opt/treemerge
    python -m virtualenv --system-site-packages env
    . env/bin/activate
    pip install 'networkx==1.11'
    pip install 'dendropy==4.3.0'
    pip install numpy
    pip install treeswift
    deactivate
    ## GTM
    cd /opt/
    git clone "https://github.com/vlasmirnov/GTM.git"
    cd /opt/GTM
    python3.9 -m venv env
    . env/bin/activate
    pip3 install click
    pip3 install dendropy
    pip3 install argparse
    deactivate
    ## Constrained-inc
    cd /opt/
    git clone "https://github.com/MinhyukPark/INC.git"
    cd /opt/INC
    make constraint_inc
    chmod +x ./constraint_inc
    ln -s /opt/INC/constraint_inc /usr/bin/constraint_inc

    # tree comparison
    ## Erin's tools from NJMerge
    #mkdir /opt/erin_tools
    #cd /opt/erin_tools
    #wget "https://databank.illinois.edu/datafiles/ice5b/download"
    #unzip download
    #rm download
    #rm -r __MACOSX
    #mv tools/* ./
    #rm -r tools


    ## Siavash's tools from statistical binning
    cd /opt/
    git clone "https://github.com/smirarab/binning.git"
    cd binning
    python -m virtualenv --system-site-packages env
    . env/bin/activate
    pip install 'dendropy==3.12.2'
    pip install numpy
    deactivate

    # clustering
    ## mcl
    mkdir /opt/mcl
    cd /opt/mcl
    wget "https://micans.org/mcl/src/mcl-14-137.tar.gz"
    tar -xzf ./mcl-14-137.tar.gz
    cd mcl-14-137
    ./configure
    make install


%test
    echo "Testing Packages"

    echo -n "MAFFT was installed to: "
    which mafft || echo "ERROR: Please check the installation for MAFFT"

    echo -n "ClustalOmega was installed to: "
    which clustalo || echo "ERROR: Please check the installation for ClustalOmega"

    echo -n "RAxML was installed to: "
    which raxmlHPC || echo "ERROR: Please check the installation for RAxML"

    echo -n "PhyML was installed to: "
    which phyml || echo "ERROR: Please check the installation for PhyML"

    echo -n "IQTree was installed to: "
    which iqtree || echo "ERROR: Please check the installation for IQTree"

    echo -n "FastTree was installed to: "
    which fasttree || echo "ERROR: Please check the installation for FastTree"

    echo -n "SimPhy was installed to: "
    which simphy || echo "ERROR: Please check the installation for SimPhy"

    echo -n "PAUP* was installed to: "
    which paup || echo "ERROR: Please check the installation for PAUP*"

    echo -n "ASTRID was installed to: "
    which astrid || echo "ERROR: Please check the installation for ASTRID"

    echo -n "RAxML-ng was installed to: "
    which raxmlng || echo "ERROR: Please check the installation for RAxML-ng"

    echo -n "INDELible was installed to: "
    which indelible || echo "ERROR: Please check the installation for INDELible"

    echo -n "mcl was installed to: "
    which mcl || echo "ERROR: Please check the installation for mcl"

    echo -n "epa-ng was installed to: "
    which epa-ng || echo "ERROR: Please check the installation for epa-ng"

    echo -n "gappa was installed to: "
    which gappa || echo "ERROR: Please check the installation for gappa"

    echo -n "TreeMerge was installed to: "
    (test -f /opt/treemerge/python/treemerge.py && echo "/opt/treemerge/python/treemerge.py" )|| echo "ERROR: Please check the installation for TreeMerge"

    echo -n "GTM was installed to: "
    (test -f /opt/GTM/gtm.py && echo "/opt/GTM/gtm.py" )|| echo "ERROR: Please check the installation for GTM"

    echo -n "Constrained-inc was installed to: "
    which constraint_inc || echo "ERROR: Please check the installation for Constrained-inc"

    echo -n "Statistical Binning was installed to: "
    (test -f /opt/binning/remove_edges_from_tree.py && echo "/opt/binning" )|| echo "ERROR: Please check the installation for Statistical Binning"

    # echo -n "Erin's Tools were installed to: "
    # (test -f /opt/erin_tools/compare_trees.py && echo "/opt/erin_tools/compare_trees.py" )|| echo "ERROR: Please check the installation for Erin's Tools"

    echo -n "Checking Java version: "
    java -version || echo "ERROR: Please check the installation for Default Java Runtime"
    javac -version || echo "ERROR: Please check the installation for OpenJDK"

    echo -n "Checking Python version: "
    python --version || echo "ERROR: Please check the installation for Python 2"
    python3 --version || echo "ERROR: Please check the installation for Python 3"

    echo -n "Checking Click: "
    (python -c "import click" && echo "") || echo "ERROR: Please check the installation for click in python 2"
    (python3 -c "import click" && echo "") || echo "ERROR: Please check the installation for click in python 3"

%labels
    Author MinhyukPark
